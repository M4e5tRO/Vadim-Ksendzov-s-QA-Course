{
	"info": {
		"_postman_id": "e005bc94-42cb-4a25-ace3-6c4ca672433e",
		"name": "02_HW_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//---------------------------------------------------------------------"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "02_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//3. Спарсить response body в json\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//---------------------------------------------------------------------\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Name is correct (manually)\", function () {\r",
							"    pm.expect(respData.name).to.eql(\"Mikhail\");\r",
							"    console.log(\"Name is correct (manually):\", respData.name, \"Mikhail\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Age is correct (manually)\", function () {\r",
							"    pm.expect(+respData.age).to.eql(33);\r",
							"    console.log(\"Age is correct (manually):\", +respData.age, 33);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Salary is correct (manually)\", function () {\r",
							"    pm.expect(+respData.salary).to.eql(1000);\r",
							"    console.log(\"Salary is correct (manually):\", +respData.salary, 1000);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//7. Спарсить request.\r",
							"var reqData = request.data;\r",
							"console.log(reqData);\r",
							"//---------------------------------------------------------------------\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name is correct (auto)\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"    console.log(\"Name is correct:\", respData.name, reqData.name);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age is correct (auto)\", function () {\r",
							"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
							"    console.log(\"Age is correct (auto):\", +respData.age, +reqData.age);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary is correct (auto)\", function () {\r",
							"    pm.expect(+respData.salary).to.eql(+reqData.salary);\r",
							"    console.log(\"Salary is correct (auto):\", +respData.salary, +reqData.salary);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(\"Family from response\", respData.family);\r",
							"//---------------------------------------------------------------------\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"salary_1_5 = salary*4\", function () {\r",
							"    pm.expect(+respData.family.u_salary_1_5_year).to.eql(+reqData.salary * 4);\r",
							"    console.log(\"salary_1_5 = salary*4:\", +respData.family.u_salary_1_5_year, +reqData.salary * 4);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//---------------------------------------------------------------------"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Mikhail",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "03_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//3. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//---------------------------------------------------------------------\r",
							"//4. Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"console.log(reqData);\r",
							"//---------------------------------------------------------------------\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(respData.name).to.eql(reqData.name);\r",
							"    console.log(\"Name is correct:\", respData.name, reqData.name);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
							"    console.log(\"Age is correct:\", +respData.age, +reqData.age);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary is correct\", function () {\r",
							"    pm.expect(+respData.salary).to.eql(+reqData.salary);\r",
							"    console.log(\"Salary is correct:\", +respData.salary, +reqData.salary);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(\"Family:\", respData.family);\r",
							"//---------------------------------------------------------------------\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"var dog = respData.family.pets.dog;\r",
							"console.log(\"Dog Info:\", dog);\r",
							"\r",
							"pm.test(\"Name property check\", function () {\r",
							"    pm.expect(dog).to.have.property(\"name\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Age property check\", function () {\r",
							"    pm.expect(dog).to.have.property(\"age\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"dogName Check\", function () {\r",
							"    pm.expect(dog.name).to.eql(\"Luky\");\r",
							"    console.log(\"dogName Check:\", dog.name, \"Luky\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"dogAge Check\", function () {\r",
							"    pm.expect(+dog.age).to.eql(4);\r",
							"    console.log(\"dogAge Check:\", +dog.age, 4);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//---------------------------------------------------------------------"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_3?name=Mikhail&age=33&salary=400",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Mikhail"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "04_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//3. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//---------------------------------------------------------------------\r",
							"//4. Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"console.log(reqData);\r",
							"//---------------------------------------------------------------------\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name is correct\", () => {\r",
							"    pm.expect(respData.name).to.eql(respData.name);\r",
							"    console.log(\"Name is correct:\", respData.name, reqData.name);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Age is correct\", () => {\r",
							"    pm.expect(+respData.age).to.eql(+reqData.age);\r",
							"    console.log(\"Age is correct\", +respData.age, +reqData.age);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"var respSal = respData.salary;\r",
							"var reqSal = reqData.salary;\r",
							"\r",
							"console.log(\"Salary from request:\", reqSal);\r",
							"//---------------------------------------------------------------------\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log(\"Salary from response:\", respSal);\r",
							"//---------------------------------------------------------------------\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"Salary from response[0]:\", +(respSal[0]));\r",
							"//---------------------------------------------------------------------\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Salary from response[1]:\", +(respSal[1]));\r",
							"//---------------------------------------------------------------------\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Salary from response[2]:\", +(respSal[2]));\r",
							"//---------------------------------------------------------------------\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salary[0] check\", () => {\r",
							"    pm.expect(+(respSal[0])).to.eql(+reqSal);\r",
							"    console.log(\"Salary[0] check:\", +(respSal[0]), +reqSal);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Salary[1] check\", () => {\r",
							"    pm.expect(+(respSal[1])).to.eql(+(reqSal*2));\r",
							"    console.log(\"Salary[1] check:\", +(respSal[1]), +(reqSal*2));\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Salary[2] check\", () => {\r",
							"    pm.expect(+(respSal[2])).to.eql(+(reqSal*3));\r",
							"    console.log(\"Salary[2] check:\", +(respSal[2]), +(reqSal*3));\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//15. Создать в окружении переменную name\r",
							"//---------------------------------------------------------------------\r",
							"//16. Создать в окружении переменную age\r",
							"//---------------------------------------------------------------------\r",
							"//17. Создать в окружении переменную salary\r",
							"//---------------------------------------------------------------------\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", reqData.name);\r",
							"//---------------------------------------------------------------------\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\", reqData.age);\r",
							"//---------------------------------------------------------------------\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", reqData.salary);\r",
							"//---------------------------------------------------------------------\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for(let elSal of respData.salary){ // for..of - arrays only\r",
							"    console.log(elSal);\r",
							"};\r",
							"//---------------------------------------------------------------------\r",
							"//---------------------------------------------------------------------"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Mikhail&age=33&salary=400",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Mikhail"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "400"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "05_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр salary из окружения в request\r",
							"//2. Вставить параметр age из окружения в age\r",
							"//3. Вставить параметр name из окружения в name\r",
							"//4. Отправить запрос.\r",
							"//---------------------------------------------------------------------\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//6. Спарсить response body в json.\r",
							"var respData = pm.response.json();\r",
							"console.log(respData);\r",
							"//---------------------------------------------------------------------\r",
							"//7. Спарсить request.\r",
							"var reqData = request.data;\r",
							"console.log(reqData);\r",
							"//---------------------------------------------------------------------\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Response has start_qa_salary\", () => {\r",
							"    pm.expect(respData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Response has qa_salary_after_6_months\", () => {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Response has qa_salary_after_12_months\", () => {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Response has qa_salary_after_1.5_year\", () => {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Response has qa_salary_after_3.5_years\", () => {\r",
							"    pm.expect(respData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Response has person parameter\", () => {\r",
							"    pm.expect(respData).to.have.property(\"person\");\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary is correct\", () => {\r",
							"    pm.expect(+respData.start_qa_salary).to.eql(+reqData.salary);\r",
							"    console.log(\"start_qa_salary is correct:\", +respData.start_qa_salary, +reqData.salary);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months is correct\", () => {\r",
							"    pm.expect(+respData.qa_salary_after_6_months).to.eql(+reqData.salary*2);\r",
							"    console.log(\"qa_salary_after_6_months is correct:\", +respData.qa_salary_after_6_months, +reqData.salary*2);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months is correct\", () => {\r",
							"    pm.expect(+respData.qa_salary_after_12_months).to.eql(+reqData.salary*2.7);\r",
							"    console.log(\"qa_salary_after_12_months is correct:\", +respData.qa_salary_after_12_months, +reqData.salary*2.7);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year is correct\", () => {\r",
							"    pm.expect(+respData[\"qa_salary_after_1.5_year\"]).to.eql(+reqData.salary*3.3);\r",
							"    console.log(\"qa_salary_after_1.5_year is correct:\", +respData[\"qa_salary_after_1.5_year\"], +reqData.salary*3.3);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years is correct\", () => {\r",
							"    pm.expect(+respData[\"qa_salary_after_3.5_years\"]).to.eql(+reqData.salary*3.8);\r",
							"    console.log(\"qa_salary_after_3.5_years is correct:\", +respData[\"qa_salary_after_3.5_years\"], +reqData.salary*3.8);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"person.u_name[1] is correct\", () => {\r",
							"    pm.expect(+respData.person.u_name[1]).to.eql(+reqData.salary);\r",
							"    console.log(\"person.u_name[1] is correct:\", +respData.person.u_name[1], +reqData.salary);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"person.u_age is correct\", () => {\r",
							"    pm.expect(+respData.person.u_age).to.eql(+reqData.age);\r",
							"    console.log(\"person.u_age is correct:\", +respData.person.u_age, +reqData.age);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years is correct\", () => {\r",
							"    pm.expect(+respData.person.u_salary_5_years).to.eql(reqData.salary*4.2);\r",
							"    console.log(\"u_salary_5_years is correct:\", +respData.person.u_salary_5_years, +reqData.salary*4.2);\r",
							"});\r",
							"//---------------------------------------------------------------------\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"for(let personElm in respData.person){\r",
							"    console.log(personElm);\r",
							"}\r",
							"//---------------------------------------------------------------------\r",
							"//---------------------------------------------------------------------"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}